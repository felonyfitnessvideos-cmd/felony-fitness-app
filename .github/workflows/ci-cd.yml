name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop, 'feature/*']
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

jobs:
  # ===== QUALITY CHECKS =====
  quality-checks:
    name: 🔍 Code Quality & Security
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: ⚡ Install Dependencies
        run: npm ci
        
      - name: 🔍 ESLint Check
        run: npm run lint
        
      - name: 🏗️ TypeScript Check  
        run: npx tsc --noEmit
        
      - name: 🛡️ Security Audit
        run: npm audit --audit-level=moderate
        
      - name: 📊 Build Size Check
        run: |
          npm run build
          ls -la dist/assets/
          du -sh dist/

  # ===== AUTOMATED TESTING =====
  test:
    name: 🧪 Automated Testing
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: ⚡ Install Dependencies
        run: npm ci
        
      - name: 🧪 Run Unit Tests
        run: npm run test:ci
        
      - name: 📊 Upload Coverage Reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  # ===== BUILD VERIFICATION =====
  build:
    name: 🏗️ Build Verification
    runs-on: ubuntu-latest
    needs: [quality-checks, test]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: ⚡ Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build Application
        run: npm run build
        
      - name: 📦 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  # ===== PERFORMANCE TESTING =====
  lighthouse:
    name: ⚡ Performance Testing
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js  
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: ⚡ Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build for Testing
        run: npm run build
        
      - name: 🚀 Serve Built App
        run: |
          npm install -g serve
          serve -s dist -p 3000 &
          sleep 5
          
      - name: ⚡ Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # ===== DEPLOYMENT STATUS =====
  deployment-status:
    name: 🌐 Deployment Status
    runs-on: ubuntu-latest
    needs: [quality-checks, test, build]
    if: always()
    
    steps:
      - name: 📊 Report Status
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha
            });
            
            console.log(`✅ Pipeline completed for commit ${context.sha.substring(0, 7)}`);
            console.log(`🚀 Quality checks: ${{ needs.quality-checks.result }}`);
            console.log(`🧪 Tests: ${{ needs.test.result }}`);
            console.log(`🏗️ Build: ${{ needs.build.result }}`);
            
            if (deployments.length > 0) {
              console.log(`🌐 Vercel deployment: ${deployments[0].payload.web_url}`);
            }